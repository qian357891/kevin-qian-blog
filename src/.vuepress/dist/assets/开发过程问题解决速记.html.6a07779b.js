import{_ as e,r as t,o,c as p,a as n,b as i,d as c,e as s}from"./app.457dfeaf.js";const r={},l=s(`<h2 id="_413请求码-request-entity-too-large" tabindex="-1"><a class="header-anchor" href="#_413请求码-request-entity-too-large" aria-hidden="true">#</a> 413请求码 request entity too large</h2><p>后端使用的nestjs（基于express）</p><p>main.ts</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">//...</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> bodyParser <span class="token keyword">from</span> <span class="token string">&#39;body-parser&#39;</span><span class="token punctuation">;</span> <span class="token comment">//限制request body json大小</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//...</span>
<span class="token comment">// 限制请求体json大小</span>
  app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> limit<span class="token operator">:</span> <span class="token string">&#39;1mb&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">{</span> limit<span class="token operator">:</span> <span class="token string">&#39;1mb&#39;</span><span class="token punctuation">,</span> extended<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//...</span>
<span class="token punctuation">}</span>
<span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),d={href:"https://javascript.tutorialink.com/nest-js-request-entity-too-large-payloadtoolargeerror-request-entity-too-large/",target:"_blank",rel:"noopener noreferrer"},u=s(`<h2 id="rimraf-command-not-found" tabindex="-1"><a class="header-anchor" href="#rimraf-command-not-found" aria-hidden="true">#</a> rimraf: command not found</h2><p>https://github.com/skpm/skpm/issues/180</p><p>没有装rimraf依赖</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>全局安装：npm install rimraf -g
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="nest-command-not-found" tabindex="-1"><a class="header-anchor" href="#nest-command-not-found" aria-hidden="true">#</a> nest: command not found</h2><p>同上</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm i -g @nestjs/cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="找不到mainjs文件" tabindex="-1"><a class="header-anchor" href="#找不到mainjs文件" aria-hidden="true">#</a> 找不到mainjs文件</h2><p>可能是权限问题，www更改为root</p><h2 id="nginx反向代理" tabindex="-1"><a class="header-anchor" href="#nginx反向代理" aria-hidden="true">#</a> nginx反向代理</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>目标url:http://121.5.143.106:3000
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="win10修改postgresql密码" tabindex="-1"><a class="header-anchor" href="#win10修改postgresql密码" aria-hidden="true">#</a> win10修改postgresql密码</h2><p><strong>在输入框中输入“sql shell”，可以直接打开psql</strong>。</p><p>PostgreSQL\\data中的pg_hba.conf最后的md5改为trust可不用密码登入，如果需要密码，改为md5</p><p>以用户postgres登陆数据库后，命令行会显示postgres=#,后面输入alter user postgres with password ‘xxxx’;(其中xxxx是修改的密码)。</p><h2 id="ubuntu配置postgresql" tabindex="-1"><a class="header-anchor" href="#ubuntu配置postgresql" aria-hidden="true">#</a> ubuntu配置postgresql</h2><p>https://www.cnblogs.com/wwh/p/11605240.html#:~:text=%E5%9C%A8Ubuntu%E4%B8%8B,%EF%BC%8C%E5%AF%86%E7%A0%81%E6%98%AF%E9%9A%8F%E6%9C%BA%E7%9A%84%E3%80%82</p><p>https://blog.csdn.net/qq_34631220/article/details/122284874</p><p>https://blog.csdn.net/adley_app/article/details/82965743</p><h2 id="ubuntu部署nest" tabindex="-1"><a class="header-anchor" href="#ubuntu部署nest" aria-hidden="true">#</a> ubuntu部署nest</h2><p>在nginx部署的网站中配置加上反向代理（记得开启防火墙的端口）</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 反向代理
     location ^~/api/ {
        proxy_pass http://121.5.143.106:3000/api/;
    }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22);function m(h,k){const a=t("ExternalLinkIcon");return o(),p("div",null,[l,n("p",null,[n("a",d,[i("详细解决方法"),c(a)])]),u])}const v=e(r,[["render",m],["__file","开发过程问题解决速记.html.vue"]]);export{v as default};
