import{_ as n,o as s,c as a,e}from"./app.783f91eb.js";const t={},p=e(`<h1 id="nest-js-三" tabindex="-1"><a class="header-anchor" href="#nest-js-三" aria-hidden="true">#</a> Nest.js（三）</h1><h2 id="add-pagination-添加分页" tabindex="-1"><a class="header-anchor" href="#add-pagination-添加分页" aria-hidden="true">#</a> add pagination 添加分页</h2><p>创建一个新的dto</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>nest g class common/dto/pagination-query.dto --no-spec
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>pagination-query.dto：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> IsOptional<span class="token punctuation">,</span> IsPositive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;class-validator&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">PaginationQueryDto</span> <span class="token punctuation">{</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">IsOptional</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">IsPositive</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  limit<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">IsOptional</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">IsPositive</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  offset<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们在main.ts中的管道中加上<code>transformOptions: {enableImplicitConversion: true,}</code>这能让我们传入的值始终为number</p><p>修改coffees.controller.ts：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token function">findAll</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Query</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> paginationQuery<span class="token operator">:</span> PaginationQueryDto<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Coffee<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>coffeesService<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>paginationQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改coffes.service.ts：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">//输出所有的coffee</span>
<span class="token function">findAll</span><span class="token punctuation">(</span>paginationQuery<span class="token operator">:</span> PaginationQueryDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> limit<span class="token punctuation">,</span> offset <span class="token punctuation">}</span> <span class="token operator">=</span> paginationQuery<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>coffeeRepository<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    relations<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;flavors&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    skip<span class="token operator">:</span> offset<span class="token punctuation">,</span>
    take<span class="token operator">:</span> limit<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>演示：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// localhost:3000/coffees?limit=1  这时只会打印一个</span>
<span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#coffee #3&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;brand&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Nest&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;flavors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;demo&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nice&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;sweet&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>

<span class="token comment">//localhost:3000/coffees?offset=1  这时会打(印总的数量-1)个</span>
<span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#coffee #4&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;brand&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Nest4&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;flavors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;demo&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nice&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;sweet&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#coffee #5&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;brand&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Nest5&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;flavors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;demo&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nice&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;sweet&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cando&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="nest与typeorm的transaction-事务" tabindex="-1"><a class="header-anchor" href="#nest与typeorm的transaction-事务" aria-hidden="true">#</a> nest与typeorm的transaction（事务）</h2><h3 id="事务的概念与作用" tabindex="-1"><a class="header-anchor" href="#事务的概念与作用" aria-hidden="true">#</a> 事务的概念与作用</h3><p>比如有两个表：账号表和信息表，而这两个表之间有关联。因此呢，我们在新增一个表的数据的时候就得给另外一个表也同时新增数据。然而这是两步操作(即第一步我要新增账号表数据，第一步在新增信息表数据)。假若其中有一个操作失败了呢？如账号新增成功，而信息失败了。如果不处理就会导致，这个账号没有信息的。因此事务就发生作用了。在一个事务中，必须要都成功才算是新增成功。否则都算失败。</p><h3 id="应用事务" tabindex="-1"><a class="header-anchor" href="#应用事务" aria-hidden="true">#</a> 应用事务</h3><p>设想一下你有一个新的业务：为用户推荐喜欢口味的咖啡。</p><p>这时候，我们就需要使用transaction（事务）来进行。</p><p>创建一个文件</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>nest g class events/entities/event.entity --no-spec
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>event.entity.ts：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Column<span class="token punctuation">,</span> Entity<span class="token punctuation">,</span> PrimaryGeneratedColumn <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;typeorm&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Entity</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Event</span> <span class="token punctuation">{</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">PrimaryGeneratedColumn</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Column</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Column</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Column</span></span><span class="token punctuation">(</span><span class="token string">&#39;json&#39;</span><span class="token punctuation">)</span>
  payload<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在coffees.moudle.ts中导入</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>imports<span class="token operator">:</span> <span class="token punctuation">[</span>TypeOrmModule<span class="token punctuation">.</span><span class="token function">forFeature</span><span class="token punctuation">(</span><span class="token punctuation">[</span>Coffee<span class="token punctuation">,</span> Flavor<span class="token punctuation">,</span> Event<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们也需要在coffee.entity.ts中添加recommendation附加列：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Column</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
recommendation<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在service文件中添加内容：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">constructor</span><span class="token punctuation">(</span>
	<span class="token comment">//...</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> connection<span class="token operator">:</span> DataSource<span class="token punctuation">,</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">//...</span>
<span class="token keyword">async</span> <span class="token function">recommendCoffe</span><span class="token punctuation">(</span>coffee<span class="token operator">:</span> Coffee<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> queryRunner <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">createQueryRunner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> queryRunner<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> queryRunner<span class="token punctuation">.</span><span class="token function">startTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了能够代码的健壮性，我们需要添加try catch</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token function">recommendCoffe</span><span class="token punctuation">(</span>coffee<span class="token operator">:</span> Coffee<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> queryRunner <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">createQueryRunner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> queryRunner<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> queryRunner<span class="token punctuation">.</span><span class="token function">startTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    coffee<span class="token punctuation">.</span>recommendation<span class="token operator">++</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> recommendEvent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Event</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    recommendEvent<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;recommend_coffee&#39;</span><span class="token punctuation">;</span>
    recommendEvent<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&#39;coffee&#39;</span><span class="token punctuation">;</span>
    recommendEvent<span class="token punctuation">.</span>payload <span class="token operator">=</span> <span class="token punctuation">{</span> coffeeId<span class="token operator">:</span> coffee<span class="token punctuation">.</span>id <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">await</span> queryRunner<span class="token punctuation">.</span>manager<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>coffee<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> queryRunner<span class="token punctuation">.</span>manager<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>recommendEvent<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">await</span> queryRunner<span class="token punctuation">.</span><span class="token function">commitTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> queryRunner<span class="token punctuation">.</span><span class="token function">rollbackTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> queryRunner<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用索引" tabindex="-1"><a class="header-anchor" href="#使用索引" aria-hidden="true">#</a> 使用索引</h3><p>我们可以通过索引来快速访问 数据库 表中的特定信息</p><p>在entity文件中用@Index()装饰器来指定索引，在列上使用或者在类上使用，传入一个数组。</p><p>event.entity.ts</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Column<span class="token punctuation">,</span> Entity<span class="token punctuation">,</span> Index<span class="token punctuation">,</span> PrimaryGeneratedColumn <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;typeorm&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Index</span></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Entity</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Event</span> <span class="token punctuation">{</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">PrimaryGeneratedColumn</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Column</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Index</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Column</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Column</span></span><span class="token punctuation">(</span><span class="token string">&#39;json&#39;</span><span class="token punctuation">)</span>
  payload<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="typeorm-migration-迁移-待完善。。。" tabindex="-1"><a class="header-anchor" href="#typeorm-migration-迁移-待完善。。。" aria-hidden="true">#</a> typeorm migration（迁移） - （待完善。。。）</h2><p>创建一个ormconfig.js文件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;postgres&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">54322</span><span class="token punctuation">,</span>
  <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;postgres&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">database</span><span class="token operator">:</span> <span class="token string">&#39;postgres&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">entities</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;dist/**/*.entity.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">migrations</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;dist/migrations/*.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">cli</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">migrationsDir</span><span class="token operator">:</span> <span class="token string">&#39;src/migrations&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>生成一个迁移文件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yarn typeorm migration:create ./src/migration/CoffeeRefactor
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们在coffee.entity.ts中将name改为title，<strong>需要注意的是：由于开启了synchronize，所以如果不使用数据库迁移的话会将原有的name列的数据删除，而数据库迁移则保护了这些数据（相当于重命名列）。这就是数据库迁移的作用</strong>。</p><p>1660471755457-CoffeeRefactor.ts（生成的迁移文件），修改up和down方法：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> MigrationInterface<span class="token punctuation">,</span> QueryRunner <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;typeorm&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">CoffeeRefactor1660471755457</span> <span class="token keyword">implements</span> <span class="token class-name">MigrationInterface</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token function">up</span><span class="token punctuation">(</span>queryRunner<span class="token operator">:</span> QueryRunner<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> queryRunner<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ALTER TABLE &quot;coffee&quot; RENAME COLUMN &quot;name&quot; TO &quot;title&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token function">down</span><span class="token punctuation">(</span>queryRunner<span class="token operator">:</span> QueryRunner<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> queryRunner<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ALTER TABLE &quot;coffee&quot; RENAME COLUMN &quot;title&quot; TO &quot;name&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们还需要重新进行构建，确定TypeOrm cli能够在<code>/dist</code>找到迁移文件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yarn run build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>随后我们进行迁移：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h2 id="控制nest模块的封装" tabindex="-1"><a class="header-anchor" href="#控制nest模块的封装" aria-hidden="true">#</a> 控制nest模块的封装</h2><p>创建一个新的文件夹和module，service文件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>nest g mo coffee-rating
nest g s coffee-rating 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>coffee-rating.module.ts：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Module <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> CoffeesModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;src/coffees/coffees.module&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> CoffeeRatingService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./coffee-rating.service&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span>CoffeesModule<span class="token punctuation">]</span><span class="token punctuation">,</span>
  providers<span class="token operator">:</span> <span class="token punctuation">[</span>CoffeeRatingService<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">CoffeeRatingModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>coffee-rating.service.ts：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Injectable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> CoffeesService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;src/coffees/coffees.service&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Injectable</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">CoffeeRatingService</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> <span class="token keyword">readonly</span> coffeesService<span class="token operator">:</span> CoffeesService<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是现在运行会报错：Error: Nest can&#39;t resolve dependencies of the CoffeeRatingService (?). Please make sure that the argument CoffeesService at index [0] is available in the CoffeeRatingModule context.</p><p>我们需要在coffees.module.ts中将其设置为exports：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Module <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> TypeOrmModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/typeorm&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Event <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;src/events/entities/event.entity&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> CoffeesController <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./coffees.controller&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> CoffeesService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./coffees.service&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Coffee <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./entities/coffee.entities&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Flavor <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./entities/flavor.entity&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span>TypeOrmModule<span class="token punctuation">.</span><span class="token function">forFeature</span><span class="token punctuation">(</span><span class="token punctuation">[</span>Coffee<span class="token punctuation">,</span> Flavor<span class="token punctuation">,</span> Event<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  controllers<span class="token operator">:</span> <span class="token punctuation">[</span>CoffeesController<span class="token punctuation">]</span><span class="token punctuation">,</span>
  providers<span class="token operator">:</span> <span class="token punctuation">[</span>CoffeesService<span class="token punctuation">]</span><span class="token punctuation">,</span>
  exports<span class="token operator">:</span> <span class="token punctuation">[</span>CoffeesService<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">CoffeesModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样我们就可以在CoffeeRatingModule中的任何地方使用CoffeesService，简而言之，这就是封装</p><h2 id="provides" tabindex="-1"><a class="header-anchor" href="#provides" aria-hidden="true">#</a> provides</h2><h3 id="value-based-provide" tabindex="-1"><a class="header-anchor" href="#value-based-provide" aria-hidden="true">#</a> value based provide</h3><p><code>provids:[CoffeesService]</code>其实是一种简写形式，相当于：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>provids<span class="token operator">:</span><span class="token punctuation">[</span>
	<span class="token punctuation">{</span>
		provide<span class="token operator">:</span> CoffeesService
		useClass<span class="token operator">:</span> CoffeesService
	<span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以我们可以在provides中添加一些自定义类：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Module <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> TypeOrmModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/typeorm&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Event <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;src/events/entities/event.entity&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> CoffeesController <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./coffees.controller&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> CoffeesService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./coffees.service&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Coffee <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./entities/coffee.entities&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Flavor <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./entities/flavor.entity&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">MockCoffeeService</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span>TypeOrmModule<span class="token punctuation">.</span><span class="token function">forFeature</span><span class="token punctuation">(</span><span class="token punctuation">[</span>Coffee<span class="token punctuation">,</span> Flavor<span class="token punctuation">,</span> Event<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  controllers<span class="token operator">:</span> <span class="token punctuation">[</span>CoffeesController<span class="token punctuation">]</span><span class="token punctuation">,</span>
  providers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> provide<span class="token operator">:</span> CoffeesService<span class="token punctuation">,</span> useValue<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">MockCoffeeService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  exports<span class="token operator">:</span> <span class="token punctuation">[</span>CoffeesService<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">CoffeesModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用token与provides" tabindex="-1"><a class="header-anchor" href="#使用token与provides" aria-hidden="true">#</a> 使用Token与provides</h3><p>我们使用一组useValue作为Token的提供：</p><p>coffees.module.ts：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>providers<span class="token operator">:</span> <span class="token punctuation">[</span>
    CoffeesService<span class="token punctuation">,</span>
    <span class="token punctuation">{</span> provide<span class="token operator">:</span> <span class="token string">&#39;COFFEE_BRANDS&#39;</span><span class="token punctuation">,</span> useValue<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;buddy brew&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nescafe&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>service中使用@Inject()装饰器注入：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>  <span class="token function">constructor</span><span class="token punctuation">(</span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">InjectRepository</span></span><span class="token punctuation">(</span>Coffee<span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> coffeeRepository<span class="token operator">:</span> Repository<span class="token operator">&lt;</span>Coffee<span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">InjectRepository</span></span><span class="token punctuation">(</span>Flavor<span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> flavorRepository<span class="token operator">:</span> Repository<span class="token operator">&lt;</span>Flavor<span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> connection<span class="token operator">:</span> DataSource<span class="token punctuation">,</span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Inject</span></span><span class="token punctuation">(</span><span class="token string">&#39;COFFEE_BRANDS&#39;</span><span class="token punctuation">)</span> coffeeBrands<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了避免以后重构文件出错，我们可以新建一个文件，然后使用export的变量，coffees.constants.ts：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>export const COFFEE_BRANDS = &#39;COFFEE_BRANDS&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其他的文件也将字符串改为变量：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">//...</span>
<span class="token punctuation">{</span> provide<span class="token operator">:</span> <span class="token constant">COFFEE_BRANDS</span><span class="token punctuation">,</span> useValue<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;buddy brew&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nescafe&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token comment">//...</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Inject</span></span><span class="token punctuation">(</span><span class="token constant">COFFEE_BRANDS</span><span class="token punctuation">)</span> coffeeBrands<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token comment">//...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们也可以在constructor中写个测试：</p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>coffeeBrands<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以看到启动的时候打印出Token：<code>[ &#39;buddy brew&#39;, &#39;nescafe&#39; ]</code></p><h3 id="使用useclass进行provide" tabindex="-1"><a class="header-anchor" href="#使用useclass进行provide" aria-hidden="true">#</a> 使用useClass进行provide</h3><p>useClass支持动态创建provide</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">//...</span>
<span class="token keyword">class</span> <span class="token class-name">ConfigService</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">DevelopmentConfigService</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">ProductionConfigService</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">//...</span>
<span class="token punctuation">{</span>
      provide<span class="token operator">:</span> ConfigService<span class="token punctuation">,</span>
      useClass<span class="token operator">:</span>
        process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span>
          <span class="token operator">?</span> DevelopmentConfigService
          <span class="token operator">:</span> ProductionConfigService<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token comment">//...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="usefactory" tabindex="-1"><a class="header-anchor" href="#usefactory" aria-hidden="true">#</a> useFactory</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token punctuation">{</span> provide<span class="token operator">:</span> <span class="token constant">COFFEE_BRANDS</span><span class="token punctuation">,</span> <span class="token function-variable function">useFactory</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string">&#39;buddy brew&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nescafe&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>更好的实现：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">//...</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Injectable</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">CoffeeBrandsFactory</span> <span class="token punctuation">{</span>
  <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// do something</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">&#39;buddy brew&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nescafe&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">//...</span>
CoffeeBrandsFactory<span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      provide<span class="token operator">:</span> <span class="token constant">COFFEE_BRANDS</span><span class="token punctuation">,</span>
      <span class="token function-variable function">useFactory</span><span class="token operator">:</span> <span class="token punctuation">(</span>brandsFactory<span class="token operator">:</span> CoffeeBrandsFactory<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        brandsFactory<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      inject<span class="token operator">:</span> <span class="token punctuation">[</span>CoffeeBrandsFactory<span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token comment">//...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>异步：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>    <span class="token punctuation">{</span>
      provide<span class="token operator">:</span> <span class="token constant">COFFEE_BRANDS</span><span class="token punctuation">,</span>
      useFactory<span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>connection<span class="token operator">:</span> DataSource<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// const coffeeBrands = await connection.query(&#39;SELECT * ...&#39;);</span>
        <span class="token keyword">const</span> coffeeBrands <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;buddy brew&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nescafe&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> coffeeBrands<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      inject<span class="token operator">:</span> <span class="token punctuation">[</span>DataSource<span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="动态模块" tabindex="-1"><a class="header-anchor" href="#动态模块" aria-hidden="true">#</a> 动态模块</h2><p>至此，我们使用的模块都是静态的，为了在使用模块的时候有更多的灵活性，我们使用动态的模块</p><h2 id="env文件" tabindex="-1"><a class="header-anchor" href="#env文件" aria-hidden="true">#</a> env文件</h2><p>我们可能会在不同环境中使用nest，因此，我们需要使用<code>.env</code>文件。在nodejs中，env文件一般为应用程序配置的键值对。</p><p>添加config包</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yarn add @nestjs/config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>并且在app.moudle.ts中的imports中使用ConfigModule</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>imports<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token comment">//...</span>
    ConfigModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">//...</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样它将能够从默认位置加载和解析我们的<code>.env</code>文件</p><p>.env：</p><div class="language-env line-numbers-mode" data-ext="env"><pre class="language-env"><code>DATABASE_USER=postgres
DATABASE_PASSWORD=123456
DATABASE_NAME=postgres
DATABASE_PORT=54322
DATABASE_HOST=localhost
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>记得在gitignore中添上<code>*.env</code></p><p>app.module.ts：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">//...</span>
TypeOrmModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token string">&#39;postgres&#39;</span><span class="token punctuation">,</span>
  host<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DATABASE_HOST</span><span class="token punctuation">,</span>
  port<span class="token operator">:</span> <span class="token operator">+</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DATABASE_PORT</span><span class="token punctuation">,</span><span class="token comment">//记得转一下，因为port需要传入number类型，而DATABASE_PORT为字符串</span>
  username<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DATABASE_NAME</span><span class="token punctuation">,</span>
  password<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DATABASE_PASSWORD</span><span class="token punctuation">,</span>
  database<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DATABASE_NAME</span><span class="token punctuation">,</span>
  autoLoadEntities<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  synchronize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token comment">//...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以指定路径或者忽略env文件</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>//指定路径
ConfigModule.forRoot({
	envFilePath: &#39;.environment&#39;
})
// 忽略
ConfigModule.forRoot({
	ignoreEnvFile: true
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="joi验证配置" tabindex="-1"><a class="header-anchor" href="#joi验证配置" aria-hidden="true">#</a> joi验证配置</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yarn add @hapi/joi
npm i --save-dev @types/hapi__joi
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>app.module.ts</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>ConfigModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      validationSchema<span class="token operator">:</span> Joi<span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token constant">DATABASE_HOST</span><span class="token operator">:</span> Joi<span class="token punctuation">.</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token constant">DATABASE_PORT</span><span class="token operator">:</span> Joi<span class="token punctuation">.</span><span class="token function">number</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token number">54322</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样env文件必须要有host和port才能运行项目</p><p>记得导入Joi包要这样导入</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> Joi <span class="token keyword">from</span> <span class="token string">&#39;@hapi/joi&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="异步添加配置" tabindex="-1"><a class="header-anchor" href="#异步添加配置" aria-hidden="true">#</a> 异步添加配置</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>TypeOrmModule.forRootAsync({
	useFactory: ()=&gt;({})
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,112),o=[p];function c(i,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","3_nest.html.vue"]]);export{r as default};
