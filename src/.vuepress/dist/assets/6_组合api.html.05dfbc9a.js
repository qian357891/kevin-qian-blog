import{_ as t,r as e,o as p,c as o,a as n,b as a,d as c,e as l}from"./app.457dfeaf.js";const i={},u=n("h3",{id:"reactive和ref",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#reactive和ref","aria-hidden":"true"},"#"),a(" reactive和ref")],-1),r=n("p",null,[n("strong",null,"注意区别开ref函数与模板ref，ref函数用来声明响应式数据，相当于组合api中的data，模板ref可以用来让父组件获取子组件属性")],-1),d=n("p",null,"在选项api中我们通过data的返回值来实现响应式数据，而在组合api中我们使用reactive和ref",-1),k=n("p",null,"两个函数都用与定义响应式数据。",-1),v=n("p",null,"引用类型用reactive，基本类型用ref",-1),m={href:"https://zhuanlan.zhihu.com/p/267967246",target:"_blank",rel:"noopener noreferrer"},g=l(`<h3 id="模板ref" tabindex="-1"><a class="header-anchor" href="#模板ref" aria-hidden="true">#</a> 模板ref</h3><p>与ref函数不同，模板ref作用于标签上，是一个属性。我们可以用ref属性来获取dom元素。</p><p>使用了 <code>&lt;script setup&gt;</code> 的组件是<strong>默认私有</strong>的：一个父组件无法访问到一个使用了 <code>&lt;script setup&gt;</code> 的子组件中的任何东西，除非子组件在其中通过 <code>defineExpose</code> 宏显式暴露，这样就能让父组件获取到子组件的属性了。</p><h3 id="defineprops" tabindex="-1"><a class="header-anchor" href="#defineprops" aria-hidden="true">#</a> defineProps</h3><p>在选项api中我们使用props属性来传递prop，在组合api中我们使用<code>defineProps</code>函数（记得是通过标签中的属性传值）</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token comment">&lt;!-- 父 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ItemCard</span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:price</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>price<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-base-100 px-4 pt-4<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 子：ItemCard.vue --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span>String<span class="token punctuation">,</span>
    <span class="token literal-property property">price</span><span class="token operator">:</span>Number
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span>
    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-3 w-full flex-none text-2xl leading-none text-slate-900<span class="token punctuation">&quot;</span></span>
      <span class="token punctuation">&gt;</span></span>
    {{ props.title }}
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
    <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>price<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex-auto text-lg font-medium text-slate-500<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span>
    ￥{{ props.price }}
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function f(b,h){const s=e("ExternalLinkIcon");return p(),o("div",null,[u,r,d,k,v,n("p",null,[n("a",m,[a("Vue3 Composition API: 对比ref和reactive"),c(s)])]),g])}const q=t(i,[["render",f],["__file","6_组合api.html.vue"]]);export{q as default};
